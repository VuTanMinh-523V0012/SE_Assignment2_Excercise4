@model OrderManagement.ViewModels.CreateOrderViewModel

@{
    ViewData["Title"] = "Create Order";
}

<h1>Create Order</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" id="orderForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="Order.OrderDate" class="control-label"></label>
                                <input asp-for="Order.OrderDate" class="form-control" />
                                <span asp-validation-for="Order.OrderDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="Order.AgentID" class="control-label">Agent</label>
                                <select asp-for="Order.AgentID" class="form-select" asp-items="ViewBag.AgentID"></select>
                                <span asp-validation-for="Order.AgentID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label asp-for="Order.Status" class="control-label"></label>
                                <select asp-for="Order.Status" class="form-select">
                                    <option value="Pending">Pending</option>
                                    <option value="In Progress">In Progress</option>
                                    <option value="Completed">Completed</option>
                                    <option value="Cancelled">Cancelled</option>
                                </select>
                                <span asp-validation-for="Order.Status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Order Details</h5>
                    <button type="button" class="btn btn-light btn-sm" id="addItem">
                        <i class="bi bi-plus-circle"></i> Add Item
                    </button>
                </div>
                <div class="card-body">
                    <div id="orderDetails">
                        @for (int i = 0; i < Model.OrderDetails.Count; i++)
                        {
                            <div class="row order-detail-row mb-3 border-bottom pb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="OrderDetails[i].ItemID" class="control-label">Item</label>
                                        <select asp-for="OrderDetails[i].ItemID" class="form-select item-select" asp-items="ViewBag.ItemID"></select>
                                        <span asp-validation-for="OrderDetails[i].ItemID" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="OrderDetails[i].Quantity" class="control-label"></label>
                                        <input asp-for="OrderDetails[i].Quantity" class="form-control quantity" min="1" value="1" />
                                        <span asp-validation-for="OrderDetails[i].Quantity" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="OrderDetails[i].UnitAmount" class="control-label">Unit Price</label>
                                        <input asp-for="OrderDetails[i].UnitAmount" class="form-control unit-price" min="0.01" step="0.01" value="0.00" />
                                        <span asp-validation-for="OrderDetails[i].UnitAmount" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label class="control-label">Total</label>
                                        <input type="text" class="form-control line-total" readonly />
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="form-group pt-4 mt-2">
                                        <button type="button" class="btn btn-danger btn-sm remove-item">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-footer text-end">
                    <h5>Total: $<span id="orderTotal">0.00</span></h5>
                    <input type="hidden" asp-for="Order.TotalAmount" id="totalAmount" />
                </div>
            </div>

            <div class="form-group mb-3">
                <input type="submit" value="Create Order" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Initialize calculations
            updateCalculations();

            // Add new item row
            $("#addItem").click(function () {
                var index = $(".order-detail-row").length;
                var newRow = `
                    <div class="row order-detail-row mb-3 border-bottom pb-3">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="OrderDetails_${index}__ItemID" class="control-label">Item</label>
                                <select id="OrderDetails_${index}__ItemID" name="OrderDetails[${index}].ItemID" class="form-select item-select">
                                    ${$("#OrderDetails_0__ItemID").html()}
                                </select>
                                <span class="text-danger field-validation-valid" data-valmsg-for="OrderDetails[${index}].ItemID" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="OrderDetails_${index}__Quantity" class="control-label">Quantity</label>
                                <input id="OrderDetails_${index}__Quantity" name="OrderDetails[${index}].Quantity" type="number" class="form-control quantity" value="1" min="1" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="OrderDetails[${index}].Quantity" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="OrderDetails_${index}__UnitAmount" class="control-label">Unit Price</label>
                                <input id="OrderDetails_${index}__UnitAmount" name="OrderDetails[${index}].UnitAmount" type="number" class="form-control unit-price" value="0.00" min="0.01" step="0.01" />
                                <span class="text-danger field-validation-valid" data-valmsg-for="OrderDetails[${index}].UnitAmount" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="control-label">Total</label>
                                <input type="text" class="form-control line-total" readonly />
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="form-group pt-4 mt-2">
                                <button type="button" class="btn btn-danger btn-sm remove-item">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                `;

                $("#orderDetails").append(newRow);
                attachHandlers();
                updateCalculations();
            });

            // Function to attach handlers
            function attachHandlers() {
                $(".remove-item").off("click").on("click", function () {
                    if ($(".order-detail-row").length > 1) {
                        $(this).closest(".order-detail-row").remove();
                        // Renumber remaining rows for correct form submission
                        $(".order-detail-row").each(function (index) {
                            $(this).find("select, input").each(function () {
                                var name = $(this).attr("name");
                                if (name) {
                                    var newName = name.replace(/\[\d+\]/, "[" + index + "]");
                                    $(this).attr("name", newName);
                                }

                                var id = $(this).attr("id");
                                if (id) {
                                    var newId = id.replace(/_\d+__/, "_" + index + "__");
                                    $(this).attr("id", newId);
                                }
                            });
                        });

                        updateCalculations();
                    } else {
                        alert("At least one item is required!");
                    }
                });

                // Update calculations when values change
                $(".quantity, .unit-price").off("change keyup").on("change keyup", function() {
                    updateCalculations();
                });

                // Fetch item price when item is selected
                $(".item-select").off("change").on("change", function() {
                    var itemId = $(this).val();
                    var row = $(this).closest(".order-detail-row");

                    // You'd typically fetch the price from the server
                    // For now, we'll just set a default price as an example
                    if (itemId) {
                        row.find(".unit-price").val("0.00");
                        updateCalculations();
                    }
                });
            }

            // Function to update all calculations
            function updateCalculations() {
                var orderTotal = 0;

                $(".order-detail-row").each(function() {
                    var quantity = parseFloat($(this).find(".quantity").val()) || 0;
                    var unitPrice = parseFloat($(this).find(".unit-price").val()) || 0;
                    var lineTotal = quantity * unitPrice;

                    $(this).find(".line-total").val("$" + lineTotal.toFixed(2));
                    orderTotal += lineTotal;
                });

                $("#orderTotal").text(orderTotal.toFixed(2));
                $("#totalAmount").val(orderTotal.toFixed(2));
            }

            // Initial attachment of handlers
            attachHandlers();
        });
    </script>
}